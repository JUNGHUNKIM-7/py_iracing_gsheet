[
    {
        "key": "f3",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+m",
        "command": "explorer.newFolder"
    },
    {
        "key": "oem_3",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "tab",
        "command": "-jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+d",
        "command": "-list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "-list.focusPageUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+h",
        "command": "-testing.toggleTestingPeekHistory",
        "when": "testing.isPeekVisible"
    },
    {
        "key": "f1",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+oem_5",
        "command": "workbench.action.minimizeOtherEditors"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "f4",
        "command": "-goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "k",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "f4",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "down",
        "command": "-list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
    },
    {
        "key": "left",
        "command": "-list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
    },
    {
        "key": "l",
        "command": "list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
    },
    {
        "key": "right",
        "command": "-list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
    },
    {
        "key": "ctrl+oem_period",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_period",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "enter",
        "command": "-breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "f12",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "j",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "f9",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+q",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.referenceSearch.trigger"
    },
    {
        "key": "ctrl+shift+c",
        "command": "copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "-copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "f11",
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    {
        "key": "f10",
        "command": "workbench.action.toggleFullScreen",
        "when": "!isIOS"
    },
    {
        "key": "f11",
        "command": "-workbench.action.toggleFullScreen",
        "when": "!isIOS"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+oem_1",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.navigateBackInNavigationLocations"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+oem_3",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+z",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+3",
        "command": "git.openChange"
    },
    {
        "key": "ctrl+shift+space",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "k",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+shift+oem_5",
        "command": "workbench.action.evenEditorWidths"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
    },
    {
        "key": "f6",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f7",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "j",
        "command": "-list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+y",
        "command": "workbench.debug.viewlet.action.disableAllBreakpoints"
    },
    {
        "key": "ctrl+oem_comma",
        "command": "workbench.debug.panel.action.clearReplAction"
    },
    {
        "key": "ctrl+8",
        "command": "flutter.togglePaintBaselines"
    },
    {
        "key": "ctrl+0",
        "command": "flutter.toggleDebugPainting"
    },
    {
        "key": "ctrl+7",
        "command": "flutter.packages.upgrade.majorVersions"
    },
    {
        "key": "ctrl+9",
        "command": "flutter.togglePerformanceOverlay"
    },
    {
        "key": "ctrl+shift+p",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+y",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "alt+oem_1",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+backspace",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+u",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.focusPreviousPart"
    },
    {
        "key": "shift+f6",
        "command": "-workbench.action.focusPreviousPart"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "python.execInTerminal-icon"
    },
    {
        "key": "alt+enter",
        "command": "python.startREPL"
    }
]

//setg
{
  "workbench.colorCustomizations": {
    "editorCursor.foreground": "#025880",
    "editor.background": "#1C1E1E",
  },
  "editor.tokenColorCustomizations": {
    "variables": "#A9B7C6",
    "textMateRules": [
      {
        "scope": [
          "keyword.operator",
          "punctuation.separator",
          "support",
          "support.variable",
          "support.type.property-name",
          "source",
          "storage.type.function.arrow",
          "meta.embedded",
          "entity.other.attribute-name",
        ],
        "settings": {
          "foreground": "#A9B7C6"
        }
      }
    ]
  },
  "vim.enableNeovim": true,
  "vim.neovimPath": "C:\\tools\\neovim\\nvim-win64\\bin\\nvim.exe",
  "vim.vimrc.enable": true,
  "vim.vimrc.path": "C:\\Users\\k0108\\.config\\nvim\\init.vimrc",
  "vim.useCtrlKeys": false,
  "vim.autoindent": false,
  "vim.easymotionDimBackground": false,
  "vim.ignorecase": false,
  "vim.incsearch": false,
  "vim.joinspaces": false,
  "vim.overrideCopy": false,
  "vim.showcmd": false,
  "vim.showmodename": false,
  "vim.smartcase": false,
  "vim.startofline": false,
  "vim.surround": false,
  "vim.targets.bracketObjects.enable": false,
  "vim.targets.smartQuotes.breakThroughLines": false,
  "vim.targets.smartQuotes.aIncludesSurroundingSpaces": false,
  "vim.targets.smartQuotes.enable": false,
  "vim.wrapscan": false,
  "keyboard.dispatch": "keyCode",
  "extensions.experimental.useUtilityProcess": true,
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.external.windowsExec": "C:\\Users\\k0108\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe",
  "editor.codeActionsOnSave": {
    "source.fixAll": true,
    "source.organizeImports": true,
  },
  "search.exclude": {
    "yarn.lock": true,
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "gopls": {
    "ui.semanticTokens": true
  },
  "telemetry.telemetryLevel": "off",
  "scm.diffDecorations": "overview",
  "window.customMenuBarAltFocus": false,
  "window.menuBarVisibility": "compact",
  "debug.openDebug": "neverOpen",
  "debug.internalConsoleOptions": "neverOpen",
  "debug.focusEditorOnBreak": false,
  "debug.focusWindowOnBreak": false,
  "debug.toolBarLocation": "docked",
  "diffEditor.diffAlgorithm": "experimental",
  "diffEditor.renderSideBySide": false,
  "diffEditor.renderIndicators": false,
  "git.autofetch": true,
  "search.smartCase": true,
  "search.useIgnoreFiles": false,
  "go.inlayHints.assignVariableTypes": true,
  "go.inlayHints.functionTypeParameters": true,
  "go.inlayHints.rangeVariableTypes": true,
  "go.inlayHints.compositeLiteralTypes": true,
  "go.inlayHints.constantValues": true,
  "go.inlayHints.compositeLiteralFields": true,
  "go.useCodeSnippetsOnFunctionSuggest": true,
  "dart.flutterHotReloadOnSave": "allIfDirty",
  "dart.previewSdkDaps": true,
  "dart.previewFlutterUiGuides": true,
  "dart.previewFlutterUiGuidesCustomTracking": true,
  "emmet.showExpandedAbbreviation": "never",
  "tailwindCSS.colorDecorators": false,
  "debug.console.fontSize": 16,
  "files.autoSave": "afterDelay",
  "files.saveConflictResolution": "overwriteFileOnDisk",
  "files.defaultLanguage": "${activeEditorLanguage}",
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.restoreUndoStack": false,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.cursorBlinking": "solid",
  "editor.letterSpacing": 0.2,
  "editor.lineDecorationsWidth": 15,
  "editor.lineNumbers": "off",
  "editor.lineHeight": 24,
  "editor.lightbulb.enabled": false,
  "editor.linkedEditing": true,
  "editor.scrollBeyondLastLine": false,
  "editor.renderLineHighlight": "none",
  "editor.minimap.enabled": false,
  "editor.suggestSelection": "first",
  // "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.horizontal": "hidden",
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.parameterHints.cycle": true,
  "editor.fontFamily": "Code Saver Medium",
  "editor.fontSize": 16,
  "editor.folding": false,
  "editor.formatOnType": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.glyphMargin": false,
  "editor.matchBrackets": "never",
  "editor.hideCursorInOverviewRuler": true,
  "editor.overviewRulerBorder": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.excludeGitIgnore": true,
  "explorer.fileNesting.enabled": true,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.enablePreview": false,
  "workbench.startupEditor": "none",
  "workbench.sideBar.location": "right",
  "workbench.layoutControl.enabled": false,
  "workbench.enableExperiments": false,
  "workbench.statusBar.visible": false,
}